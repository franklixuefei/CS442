(* Start of Part C Type Derivation *)

Let ("f", Abs("x", Var "x"), If(App(Var "f", Bool true), App(Var "f", Int 1), Int 0))

														{<f, V a.a->a>}(f) = V a.a->a															{<f, V a.a->a>}(f) = V a.a->a
														-------------------------------[var]													--------------------------------[var]
{<x,a>}(x) = a										{<f, V a.a->a>} |- f:V a.a->a															{<f, V a.a->a>} |- f:ForAll a.a->a
------------------[var]							------------------------------[spec] ----------------------------- [bool]	-----------------------------------[spec]	------------------------[int]
{<x,a>} |- x : a									{<f, V a.a->a>} |- f:b->b 				{<f, V a.a->a>} |- true:bool				{<f, V a.a->a>} |- f:c->c  				 	{<f, V a.a->a>} |- 1:int
-------------------[abs]					-------------------------------------------------------------------------[app]    --------------------------------------------------------[app]  -------------------------[int]
{} |- A x.x : a->a							{<f, V a.a->a>} |- (f true):bool 																{<f, V a.a->a>} |- (f 1):int 											{<f, V a.a->a>} |- 0:int
---------------------[gen]    ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------[if]
{} |- A x.x : V a.a->a	         {<f, V a.a->a>} |- if (f true) then (f 1) else 0 : int
--------------------------------------------------------------------------------------[let]
{} |- Let(f, A x.x, if (f true) then (f 1) else 0) : int


(* End of Part C Type Derivation *)

